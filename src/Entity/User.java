package Entity;

import ADT.ListInterface;
/**
 *
 * @author Wong Kai Hao
 */
public class User extends Account implements Comparable<User>{
    private long bankNo;
    private double balance;
    private static ListInterface<Item> itemList;

    public User(String id, String name, String password, long bankNo) {
        this.id = id;
        this.name = name;
        this.password = password;
        this.bankNo = bankNo;
        this.balance=0;
    }

    public User(String id, String name, String password, long bankNo, double balance) {
        this.id = id;
        this.name = name;
        this.password = password;
        this.bankNo = bankNo;
        this.balance = balance;
    }

    public long getBankNo() {
        return bankNo;
    }

    public void setBankNo(long bankNo) {
        this.bankNo = bankNo;
    }

    public double getBalance() {
        return balance;
    }

    public void setBalance(double balance) {
        this.balance = balance;
    }

    public static ListInterface<Item> getItemList() {
        return itemList;
    }

    public static void setItemList(ListInterface<Item> itemList) {
        User.itemList = itemList;
    }
    
    public static void addItem(Item newItem){
        itemList.add(newItem);
    }
    
    public static Item displayItem(int position){
        return itemList.getEntry(position);
    }
    
    public static boolean deleteItemById(String id){
        int i;
        boolean check=false;
        for(i=1;i<=itemList.getSize()&!check;i++){
            if (itemList.getEntry(i).getItemId().equals(id)) {
                itemList.getEntry(i).setItemName("-");
                itemList.getEntry(i).setItemPic("-");
                itemList.getEntry(i).setItemDesc("-");
                itemList.getEntry(i).setCost(0);
                itemList.getEntry(i).setBidPrice(0);
                itemList.getEntry(i).setOwnerID("-");
                check=true;
            }
        }
        return check;
    }
    
    @Override
    public int compareTo(User o) {
        int result = this.id.compareTo(o.getId());
        if (result == 0) {
            result = this.id.compareTo(o.getId());
        }
        return result;
    }

    public String getNextID(String lastID){
        return autoGeneratedID(lastID);
    }
    
    @Override
    public String toString() {
        return id + "@" + name + "@" + password + "@"+bankNo +"@"+ balance;
    }
    
    private String autoGeneratedID(String lastID){
        char ch=lastID.charAt(0);
        int idCount=Integer.parseInt(lastID.substring(1))+1;
        if(idCount<10){
            return ch+String.format("000%d", idCount);
        }else if(idCount>=10&&idCount<100){
            return ch+String.format("00%d", idCount);
        }else if(idCount>=100&&idCount<1000){
            return ch+String.format("0%d", idCount);
        }else{
            return ch+String.format("%d", idCount);
        }
    }
}


