package Entity;

import ADT.SortedList;
import java.io.Serializable;
import java.util.Iterator;

/**
 *
 * @author Wong Kai Hao
 */
public class Admin extends Account implements Comparable<Admin>, Serializable {

    private static SortedList<User> userList;

    public Admin() {
        this("A0001", "ADMIN", "Admin123");
    }

    public Admin(String id, String name, String password) {
        this.id = id;
        this.name = name;
        this.password = password;
    }

    public static SortedList<User> getUserList() {
        return userList;
    }

    public static void setUserList(SortedList<User> userList) {
        Admin.userList = userList;
    }

    public static String displayResult(double yesProfit, double totalProfits) {
        String outputStr = "Total profit for today is " + String.format("RM %.2f", totalProfits) + "\n";
        outputStr += "Yesterday profits is " + String.format("RM %.2f", yesProfit) + "\n";
        int difference = (int) (yesProfit - totalProfits);
        if (yesProfit > totalProfits) {
            outputStr += "The profits decresed almost " + String.format("RM %d.00", difference);
        } else if (yesProfit == totalProfits) {
            outputStr += "The profits remained unchanged";
        } else {
            outputStr += "The profits increased almost " + String.format("RM %d.00", -difference);
        }
        return outputStr;
    }

    @Override
    public int compareTo(Admin o) {
        int result = this.id.compareTo(o.getId());
        if (result == 0) {
            result = this.id.compareTo(o.getId());
        }
        return result;
    }

    public String getNextID(String lastID) {
        return autoGeneratedID(lastID);
    }

    public void updateAdmin(Admin o) {
        this.setName(o.getName());
        this.setPassword(o.getPassword());
    }

    public void deleteAdmin() {
        this.setName("-");
        this.setPassword("-");
    }

    public static void updateUser(User user) {
        Iterator userLoop = userList.getIterator();
        while (userLoop.hasNext()) {
            User users = (User) userLoop.next();
            if (users.getId().equals(user.getId())) {
                users.setName(user.getName());
                users.setBankNo(user.getBankNo());
                users.setPassword(user.getPassword());
            }
        }
    }

    public static boolean deleteUser(String id) {
        boolean check = false;
        Iterator userLoop = userList.getIterator();
        while (userLoop.hasNext()) {
            User users = (User) userLoop.next();
            if (users.getId().equals(id)) {
                check = true;
                users.setName("-");
                users.setBankNo(0);
                users.setPassword("-");
                users.setBalance(0);
            }
        }
        return check;
    }

    @Override
    public String toString() {
        return id + "|" + name + "|" + password;
    }

    private String autoGeneratedID(String lastID) {
        char ch = lastID.charAt(0);
        int idCount = Integer.parseInt(lastID.substring(1)) + 1;
        if (idCount < 10) {
            return ch + String.format("000%d", idCount);
        } else if (idCount >= 10 && idCount < 100) {
            return ch + String.format("00%d", idCount);
        } else if (idCount >= 100 && idCount < 1000) {
            return ch + String.format("0%d", idCount);
        } else {
            return ch + String.format("%d", idCount);
        }
    }

}